/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package parqueaderofbg;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author fblum
 */
public class salidaVehiculo extends javax.swing.JPanel {

    /**
     * Creates new form salidaVehiculo
     */
    public salidaVehiculo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        salida = new javax.swing.JButton();
        placa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setBackground(new java.awt.Color(153, 255, 153));
        setPreferredSize(new java.awt.Dimension(400, 500));

        salida.setText("Salida");
        salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salidaActionPerformed(evt);
            }
        });

        jLabel1.setText("Placa");

        jLabel2.setText("Salida de Vehículos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(salida))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(placa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(placa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(salida)
                .addGap(121, 121, 121))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salidaActionPerformed
        DateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//se da formato a fecha
        Calendar cal=Calendar.getInstance();//Se hace llamado
        Date date=cal.getTime();//Se pide la fecha
        String fechaHora = dateFormat.format(date);//Si da el formato
        int precioPagar=0;
        String fechaHoraSalida = dateFormat.format(date);//Hora según el formato
        try(Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/parqueaderodb","root","")){  
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM vehiculos WHERE placa='"+placa.getText().toUpperCase()+"' AND estado='DISPONIBLE'");
            rs.next();//Para sacar el primer fila de datos
            String fechaEntra=rs.getString("horaentrada");
            Date fechaentra=dateFormat.parse(fechaEntra);
            int minutoCobro=(int) (date.getTime()-fechaentra.getTime())/60000;//Entrega en ms por lo que se pasa a min
            if("AUTOMOVIL".equals(rs.getString("tipovehiculo"))){
                precioPagar=minutoCobro*400;
            }else if("MOTOCICLETA".equals(rs.getString("tipovehiculo"))){
                precioPagar=minutoCobro*200;
            }
            JOptionPane.showMessageDialog(null,"El cliente "+rs.getString("propietario")+" debe pagar "+precioPagar+" pesos por "+minutoCobro+" minutos de servicio de un "+rs.getString("tipovehiculo"));
            stmt.executeUpdate("UPDATE vehiculos SET horasalida='"+fechaHora+"', estado='NO DISPONIBLE', valorpagado='"+precioPagar+"' WHERE placa='"+placa.getText().toUpperCase()+"' AND estado='DISPONIBLE'");
            
            
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(ingresoVehiculo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"No se encuentra el vehículo, verifique datos.");
        } catch (ParseException ex) {
            Logger.getLogger(salidaVehiculo.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_salidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField placa;
    private javax.swing.JButton salida;
    // End of variables declaration//GEN-END:variables
}
